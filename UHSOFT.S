;*********************************************
;*                                           *
;*    UHSOFT.S                              *
;*    26/4/83                                *
;*                                           *
;*********************************************
;
; THIS MODULE WILL CONTAIN HIGHER LEVEL SOFTWARE FOR THE
; MICRODRIVE.
; THE PROCEDURES WITHIN THIS MODULE RELATE TO THE KEYWORDS
; MOVE, SAVE, LOAD, VERIFY AND MERGE
; LOAD, VERIFY AND MERGE ARE MOSTLY TAKEN CARE OF IN
; IANS SH_SAVE AND SH_SAVE2 ONLY TWO PROCEDURES FOR GETTING
; A HEADER AND GETTING A DATA BLOCK (GET_HD AND GET_BL) ARE
; NEEDED
;
;	GLOBAL		MOVE,SAVE,GET_HD,GETMBL
;	GLOBAL		RELNAM
;
;	EXTERNAL	OPENN,OPENF,FORMAT,CATN				;VHSOFT
;	EXTERNAL	ERA,MANY?
;	EXTERNAL	CREATE,DELIX,NERROR,FREE?,CPSTR			;HISOFT
;	EXTERNAL	DECSEC,READN,WTHDR,LIST?
;	EXTERNAL	MWRCH,MRDCH,DECSEC,SPACE?
;	EXTERNAL	ECH,ECD,WRFREE,MARK
;	EXTERNAL	MRDIX,MWRIX,CLOSIX,WRC
;	EXTERNAL	RDNXT
;	EXTERNAL	RDHBLK,RDBLK,WRHBLK,WRBLK		;DRIVES
;	EXTERNAL	DRVSEL,BREAK?
;	EXTERNAL	HEX,OP,DIS10,OPHEX,DISMAP		;BLOCKS
;	EXTERNAL	NTEMP,IN_BYT,IN_BYP,OUT_N,OUT_T2,DELTMP,DELBC
;	EXTERNAL	NTCLSE
;	EXTERNAL	OUT_T,OPENT
;	EXTERNAL	DONE
;
; MOVE IS CALLED IN RESPONSE TO THE COMMAND MOVE SOURCE TO DESTINATION
; SOURCE AND DESTINATION MAY EITHER BE STREAMS, MICRODRIVE
; FILENAMES, NETWORK CHANNELS OR RS232 CHANNELS
; IF A FILENAME THE FILE IS OPENED AND CLOSED BY MOVE
; IF A STREAM IT IS LEFT OPEN AFTER USE TO ALLOW APPENDING TO A FILE
;
; THE SOURCE IS SPECIFIED BY STR1 AND DESTNATION BY STR2
;
MOVE
	SET	4,(IY+FLAGS3-Y)			; TELLS CHANGE THAT WE ARE NOT INKEY$
	CALL	MOP				; OPEN THE SOURCE
	LD	HL,(CHANS)
	PUSH	HL
	CALL	EXCH				; EXCHANGE SOURCE AND DESTINATION SPECS
	CALL	MOP				; OPEN THE DESTINATION
	CALL	EXCH
	POP	DE
	LD	HL,(CHANS)			; RELOCATE THE SOURCE ADDRESS
	OR	A				; IF MAP HAS BEEN INTRODUCED
	SBC	HL,DE
	LD	DE,(DR+N_STR1)
	ADD	HL,DE
	LD	(DR+N_STR1),HL
MOV0
	LD	HL,(DR+N_STR1)
	LD	(CURCHL),HL
MOV1
	OLDCAL	INCH				; YES..TRY TO GET A CHARACTER
	JR	C,MOV5
	JR	Z,MOV1				; TRY AGAIN
	JR	MOV9				; OR EOF
MOV5
	LD	HL,(DR+N_STR2)
	LD	(CURCHL),HL
;
	OLDCAL	OUTCH				; SEND THE CHARACTER
	JR	MOV0
;
MOV9
	RES	4,(IY+FLAGS3-Y)
	LD	HL,(CHANS)
	PUSH	HL
	CALL	EXCH				; CLOSE THE DESTINATION FIRST
	CALL	MOC
	CALL	EXCH
	POP	DE
	LD	HL,(CHANS)			; RELOCATE THE SOURCE ADDRESS
	OR	A				; IF A MAP HAS BEEN DELETED
	SBC	HL,DE 
	LD	DE,(DR+N_STR1)
	ADD	HL,DE
	LD	(DR+N_STR1),HL
	CALL	MOC
	CALL	DELTMP
	RET
;
;
;
MOP
	LD	A,(DR+S_STR1)			; IS IT A STREAM
	INC	A
	JR	Z,MOP1
;
	DEC	A				; YES...SELECT IT
	OLDCAL	SELECT
	LD	HL,(CURCHL)
	LD	(DR+N_STR1),HL
	RET
MOP1
	LD	A,(DR+L_STR1)			; WHICH LETTER
	CP	'M'
	JR	NZ,MOP2
;
	CALL	OPENF				; OPEN MICRODRIVE
	XOR	A				; ENABLE INTERUPTS
	CALL	DRVSEL
	LD	(DR+N_STR1),IX
	BIT	2,(IX+RECFLG)			; IS IT A SLVM FILE
	RET	Z
;
	RST	SH_ERR				; NO...WRONG FILE TYPE
	DEFB	16H
;
MOP2
	CP	'N'				; NET?
	JR	NZ,MOP3
;
	CALL	NTEMP
	LD	(DR+N_STR1),IX
	RET
;
MOP3
	CP	'T'				; CHECK THAT IT IS RS232
	JR	Z,MOP4
	CP	'B'
	JR	Z,MOP4
;
	RST	SH_ERR				; OTHERWISE NONSENSE IN BASIC
	DEFB	0
;
MOP4
	CALL	OPENT				; CREATE AN RS232 CHANNEL AND SAVE ADDRESS
	LD	(DR+N_STR1),DE
	PUSH	DE
	POP	IX
	SET	7,(IX+CHTYPE)			; MARK IT TEMPORARY FOR DELTMP
	RET
;
;
;
MOC
	LD	A,(DR+S_STR1)			; IS IT A STREAM
	INC	A
	RET	NZ				; YES...JUST RETURN
;
	LD	A,(DR+L_STR1)
	CP	'M'
	JR	NZ,MOC1
;
	LD	IX,(DR+N_STR1)
	CALL	CLOSIX				; CLOSE MICRODRIVE
	RET
MOC1
	CP	'N'
	RET	NZ				; RETURN IF NOT NET
;
	LD	IX,(DR+N_STR1)
	LD	(CURCHL),IX
	CALL	NTCLSE
	RET
;
;
;
;
; EXCH SWAPS THE SPECIFICATIONS OF SOURCE AND DESTINATIONS
; IN STR1 AND STR2
;
EXCH
	LD	DE,DR+D_STR1
	LD	HL,DR+D_STR2
	LD	B,8
EXCH1
	LD	A,(DE)
	LD	C,(HL)
	EX	DE,HL				; *
	LD	(HL),C
	LD	(DE),A
	EX	DE,HL				; *
	INC	HL
	INC	DE
	DJNZ	EXCH1
	RET
;
;
; SAVE OPENS A TEMPORARY MICRORIVE BUFFER FOR THE FILE SPECIFIED
; BY STR1. IT THEN COPIES THE HEADER DATA AT DR+HD_00 ETC AND
; THE DATA SPECIFIED INTO BUFFERS AND WRITES THEM USING WRC
; A SUBROUTINE OF WRREC WHICH LEAVES THE MOTORS SPINNING
;
; IF (DR+COPIES) IS NOT EQUAL TO 1 THEN MORE COPIES WILL BE MADE
; WITHOUT REOPENING THE FILE.
;
;
; ????MAY HAVE TO ADD A DELAY AFTER WRITING THE FIRST BLOCK
; SO THAT LOAD DOES NOT MISS THE SECOND
;
SAVE
	LD	A,(DR+D_STR1)			; CHECK WRITE PROTECT FIRST
	CALL	DRVSEL
	IN	A,(PORTC)
	AND	PROTECT
	JR	NZ,SAVE0
	RST	SH_ERR				; DRIVE WRITE PROTECTED
	DEFB	0EH
SAVE0
	LD	HL,(DR+HD_0D)
	LD	(DR+N_STR2+2),HL		; PUT BLOCK ADDR. IN X_PTR SO IT IS RELOCATED
	CALL	OPENF				; OPEN THE FILE

	BIT	WRFLG,(IX+CHFLAG)		; IS IT OPEN FOR WRITE
	JR	NZ,SAVE1
	CALL	CLOSIX
	RST	SH_ERR				; NO...ERROR
	DEFB	0CH				; WRITING TO A READ FILE
SAVE1
	SET	2,(IX+RECFLG)			; MARK THE FILE AS SLVM
	LD	A,(IX+CHDRIV)
	CALL	DRVSEL
	PUSH	IX
	POP	HL
	LD	DE,CHDATA
	ADD	HL,DE
	EX	DE,HL				; * MOVE THE HEADER DATA IN TO THE BUFFER
	LD	HL,DR+HD_00
	LD	BC,9
	LD	(IX+CHBYTE),C
	LDIR

	PUSH    DE
	LD	HL,9				; CHECK THERE IS ENOUGH SPACE ON
	LD	BC,(DR+HD_0B)			; THE DRIVE
	ADD	HL,BC
	SRL	H				; WORK OUT THE NUMBER OF RECORDS
	INC	H

	PUSH	HL
	CALL	MANY?				; COUNT THE NUMBER OF FREE SECTORS
	POP	HL

	LD	A,E
	CP	H				; AVAILABLE - REQUIRED
	JR	NC,SAV1_5

	RST	SH_ERR
	DEFB	0FH				; MICRODRIVE FULL

SAV1_5
	POP	DE
	LD	HL,(DR+N_STR2+2)		; SOURCE
	LD	BC,(DR+HD_0B)			; LENGTH
SAVE2
	LD	A,B
	OR	C
	JR	Z,SAVE4				; END OF DATA...CLOSE!
	LD	A,(IX+CHBYTE+1)			; END OF BUFFER?
	CP	2
	JR	NZ,SAVE3
	PUSH	HL
	PUSH	BC
	CALL	WRC				; YES...WRITE RECORD
	POP	BC
	PUSH	IX
	POP	HL
	LD	DE,CHDATA
	ADD	HL,DE
	EX	DE,HL				; *
	POP	HL
SAVE3
	LDI					; MOVE BYTE INTO BUFFER
	INC	(IX+CHBYTE)
	JR	NZ,SAVE2
	INC	(IX+CHBYTE+1)
	JR	SAVE2
SAVE4
	SET	1,(IX+RECFLG)			; MARK THE BLOCK EOF
	CALL	WRC				; AND SAVE IT

	LD	A,(DR+COPIES)			; DO WE NEED MORE COPIES
	DEC	A
	JR	Z,SAVE5

	LD	(DR+COPIES),A			; YES
	RES	1,(IX+RECFLG)			; RESET THE BUFFER
	LD	A,0
	LD	(IX+CHREC),A
	JR	SAVE1
SAVE5
	XOR	A
	CALL	DRVSEL				; NO..TURN OFF THE MOTOR

	JP	DELIX				; AND CLEAN UP
;
; GET_HD OPENS THE MICRO DRIVE FILE SPECIFIED IN STR1, TESTS
; IT FOR READ AND SLVM, AND READS THE FIRST NINE BYTES OF IT
; INTO THE HD_ AREA.
;
GET_HD
	LD	HL,(DR+SC_0D)			; RELOCATE THE ADDRESS
	LD	(DR+N_STR2+2),HL		; OF THE OLD VARIABLE
	CALL	OPENF				; OPEN THE FILE
	BIT	WRFLG,(IX+CHFLAG)		; IS IT OPEN FOR READ
	JR	Z,LOAD2
	RST	SH_ERR				; NO...ERROR
	DEFB	11H				; FILE NOT FOUND
LOAD2
	BIT	2,(IX+RECFLG)			; IS IT A SLVM FILE
	JR	NZ,LOAD25
	RST	SH_ERR
	DEFB	16H				; WRONG FILE TYPE
LOAD25
	PUSH	IX				; GET THE HEADER DATA
	POP	HL
	LD	DE,CHDATA
	ADD	HL,DE
	LD	DE,DR+HD_00
	LD	BC,9
	LDIR
	RET
;
; GETMBL READS THE REMAINDER OF THE FIRST RECORD AND READS ALL THE
; OTHERS IN THE FILE SPECIFIED BY IX. THE DATA IS EITHER TRANSFERED TO
; OR COMPARED WITH THE DATA AT (HL)
;
GETMBL
	LD	(DR+HD_0D),HL			; SAVE DESTINATION ADDRESS
	LD	E,(IX+CHDATA+1)			; AND LENGTH IN RECORDS
	LD	D,(IX+CHDATA+2)
	LD	HL,8				; CONVERT LENGTH TO RECORDS
	ADD	HL,DE
	SRL	H				; ADD 8,DIVIDE BY 512,ADD 1
	INC	H
	LD	A,H
	LD	(DR+HD_0B),A			; AND SAVE
;
	CALL	PUSHMP				; SAVE THE CHANNEL'S MAP
	LD	DE,9				; SETUP POINTERS TO DATA
	LD	L,(IX+RECLEN)			; RECLEN...REMAINING BYTES
	LD	H,(IX+RECLEN+1)			; DE...DESTINATION
	OR	A				; HL...SOURCE
	SBC	HL,DE
	LD	(IX+RECLEN),L
	LD	(IX+RECLEN+1),H
	PUSH	IX
	POP	HL
	LD	DE,CHDATA+9
	ADD	HL,DE
	LD	DE,(DR+HD_0D)
	JR	LOAD6				; AND MOVE RECORD TO MEMORY
LOAD5
	CALL	READ_1				; READ ANY RECORD
	LD	A,(IX+RECNUM)			; IS IT RECORD 0 AGAIN
	OR	A
	JR	Z,LOAD5				; YES IGNORE
	RLA					; NO...WORK OUT WHERE TO PUT IT
	DEC	A
	LD	D,A				; RECORD*512-9+BASE ADDRESS
	LD	E,-9
	LD	HL,(DR+HD_0D)
	ADD	HL,DE
	EX	DE,HL				; *
	PUSH	IX
	POP	HL
	LD	BC,CHDATA			; SETUP POINTER AS BEFORE
	ADD	HL,BC
LOAD6
	EXX					; SAVE POINTERS
	CALL	DONE?
	JR	NZ,LOAD5			; HAS THIS RECORD BEEN DEALT WITH
	LD	A,(HL)				; NO...MARK MAP
	OR	B
	LD	(HL),A
	EXX
	CALL	CPBLK				; MOVE OR VERIFY THE RECORD
	LD	A,(DR+HD_0B)			; DECREMENT RECORD COUNT
	DEC	A
	LD	(DR+HD_0B),A			; WAS IT THE LAST RECORD?
	JR	NZ,LOAD5			; NO...NEXT RECORD
	CALL	POPMAP				; YES...RESTORE MAP
	RET
;
; PUSHMP PUSHES THE MAP OF THE CHANNEL IDENTIFIED BY IX
; ONTO THE STACK AND REPLACES THE CONTENTS WITH ALL ZEROS
;
PUSHMP
	POP	HL				; SAVE RETURN ADDRESS
	LD	(SECTOR),HL
	LD	L,(IX+CHMAP)			; POINT TO MAP
	LD	H,(IX+CHMAP+1)
	LD	BC,1000H			; WORD COUNT IN B
PUSHM1
	LD	E,(HL)
	LD	(HL),C
	INC	HL
	LD	D,(HL)
	LD	(HL),C
	INC	HL
	PUSH	DE
	DJNZ	PUSHM1
	LD	HL,(SECTOR)			; RETURN
	JP	(HL)
;
;
; POPMAP		DOES THE OPPOSITE OF PUSHMP
;
POPMAP
	POP	HL				; SAVE RETURN ADDRESS?
	LD	(SECTOR),HL
	LD	L,(IX+CHMAP)
	LD	H,(IX+CHMAP+1)
	LD	DE,31
	ADD	HL,DE
	LD	B,16
POPMP1
	POP	DE
	LD	(HL),D
	DEC	HL
	LD	(HL),E
	DEC	HL
	DJNZ	POPMP1
	LD	HL,(SECTOR)
	JP	(HL)
;
;
; CPBLK EITHER COPIES THE RECLEN BYTES AT (HL) TO (DE)
; OR COMPARES THEM DEPENDING ON BIT XR IN FLAGS3
; IF BIT XR IS SET THEN THE BLOCKS ARE COMPARED
;
CPBLK
	LD	C,(IX+RECLEN)
	LD	B,(IX+RECLEN+1)
	LD	A,(FLAGS3)
	BIT	XR,A
	JR	NZ,CPBLK1			; COPY OR COMPARE
	LDIR					; COPY...EASY
	RET

CPBLK1
	LD	A,(DE)				; COMPARE...FAIRLY EASY
	CP	(HL)
	JR	NZ,CPBLK2
	INC	HL
	INC	DE
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,CPBLK1
	RET
CPBLK2
	RST	SH_ERR				; ERROR
	DEFB	15H				; FAILED TO VERIFY
;
; READ_ READS ANY RECORD FROM THE FILE SPECIFIED BY THE BUFFER
; AT IX IT IS BASED ON READN
; !!!!!!!!THIS PROCEDURE ONLY READS RECORDS NOT MARKED ON THE
; MAP. THIS SAVES DOING ECD ON ALREADY OBTAINED DATA AND MISSING
; THE NEXT BLOCK.
; THIS PROCEDURE LEAVES THE MOTOR SPINNING
;
READ_
	LD	A,(IX+CHDRIV)			; SELECT THE DRIVE
	CALL	DRVSEL
;
READ_1  LD	BC,TRYS*HD_MAX
	LD	(SECTOR),BC			; *
_RDN1						; *
	CALL	RDNXT				; READ THE NEXT DATA BLOCK
	JR	C,_RDN2				; * NEXT SECTOR IF NO GOOD
	JR	Z,_RDN2				; * OR EMPTY
;
	CALL	DONE?
	JR	NZ,_RDN2			; * SKIP THE ECD IF RECORD DONE ALREADY

	PUSH	IX
	POP	HL
	LD	DE,CHDATA
	ADD	HL,DE
	CALL	ECD				; ERROR CHECK AND RETURN
	RET	Z
_RDN2						; *
	CALL	DECSEC
	JR	NZ,_RDN1			; *
;
	RST	SH_ERR
	DEFB	011H				; FILE NOT FOUND
;
;
;
; RELNAME RELOCATES THE ADDRESSES OF FILENAMES (OR OTHERWISE)
; IN N_STR1+2 AND N_STR2+2 AFTER AN INSERTION
; HL SHOULD CONTAIN THE ADDRESS OF THE INSERTION
; BC SHOULD CONTAIN THE LENGTH OF THE INSERTION
; STR2 IS USED BY SLVM SYNTAX TO STORE SPECIFIED LOAD DETAILS BUT
; N_STR2+2 (23780) IS NOT USED.
;
RELNAM
	PUSH	HL
	PUSH	HL
	LD	DE,(DR+N_STR2+2)
	CALL	REL
	LD	(DR+N_STR2+2),DE
	POP	HL
	LD	DE,(DR+N_STR1+2)
	CALL	REL
	LD	(DR+N_STR1+2),DE
	POP	HL
	RET
;
;
REL
	SCF
	SBC	HL,DE
	RET	NC				; IF IT IS BELOW INSERT THEN NO CHANGE
	LD	HL,(STKEND)
	SBC	HL,DE
	RET	C				; IF IT IS ABOVE STKEND THEN NO CHANGE
	EX	DE,HL				; *
	ADD	HL,BC
	EX	DE,HL				; *
	RET
;
	