

;	EXTERNAL RETBAS
;	EXTERNAL SH_RPT
;	EXTERNAL S_CAT
;	EXTERNAL S_FORM
;	EXTERNAL S_MOVE
;	EXTERNAL S_ERAS
;	EXTERNAL S_OPEN
;	EXTERNAL S_SAVE
;	EXTERNAL S_LOAD
;	EXTERNAL S_VERI
;	EXTERNAL S_MERG
;	EXTERNAL S_CLS
;	EXTERNAL S_CLR
;	EXTERNAL OUT_N
;	EXTERNAL NTCLSE		;TEMP
;	EXTERNAL OUT_T2		;TEMP
;	EXTERNAL HOOKS
;	EXTERNAL AUTO_R
;	EXTERNAL DELTMP
;	EXTERNAL	OPHEX,HEX
 		
	ORG	R_BASE				; 0000H
	POP	HL		    		; DROP RST STACKED ADDRESS
	LD	(IY+FLAGS3-Y),00H		; CLEAR STATEMENT FLAG WHEN EXITING
						; AFTER A STATEMENT
	JP	RETBAS				; JUMP TO 0700H

	ORG	ENTRY				; 0008H
	LD	HL,(CH_ADD)			; REPEAT THE INSTRUCTION IN BASE ROM
	POP	HL				; FETCH THE DISCRIMINATOR ADDRESS
	PUSH	HL				; AND KEEP A COPY
	JP	ERR_IN				; JUMP FORWARD

	ORG	CALBAS				; 0010H
						; CALL SUBROUTINE IN BASE ROM
						; THIS USES THE SPECIAL SUBROUTINE IN THE
						; SHADOW SYS. VARS.
						;   LD HL,----  (THE STORED HL)
						;   CALL ZILCH
						;   LD (DR+H_L),HL
						;   RET
						;
						; FORMAT TO CALL 'CALBAS' IS
						;   RST CALBAS
						;   DEFW ZILCH
						; NO REGISTERS ARE ALTERED

	LD	(DR+H_L),HL			; SAVE HL IN ITS STORE
    	POP	HL				; HL POINTS TO ZILCH
	PUSH	DE				; SAVE DE TEMPORARILY
	JR	CALB_2
	
	ORG	SYNT				; 0018H
	BIT	7,(IY+FLAGS-Y)			; Z FOR SYNTAX
	RET					; NZ FOR RUN-TIME

	ORG	SH_ERR				; 0020H
	RST	SYNT
	JR	Z,SYN				; IN SYNTAX TIME	- NO REPORT
	JR	SHERR1				; RUN-TIME		- GIVE REPORT

	ORG	ROMERR				; 0028H
	RES	3,(IY+TV_FLAG-Y)		; CORRECT THE 'CURSOR' ERROR
	JR	RMERR

	ORG	INSER_				; 0030H
	JP	INSER1				; JUMP TO THE ACTUAL SUBROUTINE

	ORG	MASK				; 0038H
	EI					; KEEP INTERRUPT ON
	RET					; INTERRUPT ROUTINE FINISHED

SHERR1
	CALL	HOOK?				; TEST IF HOOK PROCEDURE
	JP	SH_RPT				; BEFORE REPORTING

RMERR
	RST	SYNT
	JR	Z,SYN
	CALL	HOOK?				; DITTO FOR OLD ERROR (ESP BREAK)
	CALL	DELTMP
   
	BIT	1,(IY+FLAGS3-Y)			; IS THIS AN AUTORUN
	JR	Z,SYN				; NO...CONTINUE

	BIT	4,(IY+FLAGS3-Y)			; AND IS IT A LOAD
	JR	Z,SYN

	LD	A,(IY+ERR_NR-Y)
	CP	14H				; HAS THE PIRATE ATTEMPTED IO BREAK?

	JR	NZ,SYN				; NO...CONTINUE

	LD	HL,0				; YES...SURPRISE, SURPRISE!
	PUSH	HL
	RST	R_BASE

	ORG	0066H
	RETN					; HERE ON NMI;SIMPLY RETURN

SYN	LD	HL,(CH_ADD)			; FETCH ERROR POINTER
	LD	(X_PTR),HL
	LD	SP,(ERR_SP)
	LD	HL,16C5H
	PUSH	HL
	RST	R_BASE				; RETURN TO BASE ROM

HOOK?
	BIT	2,(IY+FLAGS3-Y)			; IS IT A HOOK PROCEDURE ERROR
	RET	Z				; NO...RESUME SERVICE

	LD	SP,(ERR_SP)			; YES...ERROR RETURN
	RST	R_BASE


CALB_2	LD	E,(HL)				; FETCH THE TWO BYTES OF 'ZILCH'
	INC	HL
	LD	D,(HL)
	LD	(DR+ZILCH),DE			; THAT GOES INTO THE SUBROUTINE
	INC	HL				; THE RETURN ADDRESS
	EX	(SP),HL				; THIS GOES TO STACK WHILST DE
	EX	DE,HL				; IS RETURNED
	LD	HL,0000H			; STACK THE RETURN DISCRIMINATOR
	PUSH	HL
	LD	HL,0008H			; THE ERROR RETURN
	PUSH	HL
	LD	HL,DR+SBRT			; THE SUBROUTINE'S ADDRESS
	PUSH	HL
	JP	RETBAS


ERR_IN
	PUSH	AF
	LD	A,H
	OR	L
	JR	NZ,ERR_1			; JUMP IF NOT A RETURN AFTER 'CALBAS'

	POP	AF
	POP	HL				; RESTORE AF & H_L
	LD	HL,(DR+H_L)			; LOSING THE DISCRIMINATING ZERO
	RET					; A RETURN AFTER 'CALBAS'

ERR_1						; THERE HAS BEEN AN ERROR
	PUSH	DE				; ON STACK IS DISCRIMINATOR, AF & DE
	LD	DE,15FEH			; INCH & WRCH DISCRIMINATOR
	SBC	HL,DE				; CARRY IS RESET GIVING TRUE SUBTRACTION
	POP	DE				; ON STACK IS DISCRIMINATOR & AF
	JR	NZ,ERR_2			; JUMP UNLESS 'DISCRIMINATOR' = 15FEH

	POP	AF
	LD	HL,RETBAS
	PUSH	HL				; RETBAS IS STACKED
	LD	HL,0004H
	ADD	HL,DE				; THE INCH OR WRCH ADDRESS IS FOUND
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL				; IT IS MOVED TO HL AND
	JP	(HL)				; THE JUMP TO IT IS MADE

ERR_2						; THE DISCRIMINATOR IS NOT 'A CALBAS RETURN' OR
						; '15FE' FOR INCH OR WRCH;
						; THEREFORE IT IS A POINTER TO A 'REPORT DEFB'
	RST	INSER_				; ON THE FIRST VISIT TO THIS PROGRAM
						; THE SHADOW SYS. VARS. HAVE TO BE ENTERED
	LD	A,1
	OUT	(SERIAL),A			; DEACTIVATE THE NET
	LD	A,CTS.AND.SELD			; SELECT THE NET OVER RS232
						; AND NEGATE CTS

	OUT	(STATUS),A

	POP	AF				; FETCH ORIGINAL AF
	POP	HL				; FETCH DISCRIMINATOR
	PUSH	AF				; STACK HOLDS ORIGINAL AF ONLY

	RST	CALBAS				; IN EFFECT - LD A,(HL) & RET
	DEFW	007BH				; SO AS TO COLLECT THE 'DEFB'

	LD	(ERR_NR),A			; STORE THE ERROR NUMBER

	CP	0FFH				; IS IT THE END OF THE PROGRAM
	JR	NZ,ERR_HO

	BIT	1,(IY+FLAGS3-Y)			; IS THE 'AUTO-RUN' FLAG SET?
	JR	Z,ERR_PF
	BIT	7,(IY+PPC+1-Y)			; USING THE EDIT-LINE?
	JR	Z,ERR_PF
	LD	HL,(E_LINE)			; FETCH THE FIRST BYTE IN THE EDIT LINE
	LD	A,(HL)
	CP	0F7H				; IS IT 'RUN'
	JP	Z,AUTO_R			; JUMP AS DEALING WITH 'AUTO-RUN'

ERR_PF	RST	SH_ERR
	DEFB	0FFH				; 'PROGRAM FINISHED'

ERR_HO	SUB 1BH
	JP	NC,HOOKS			; JUMP FORWARD WITH THE HOOK CODES

	CP	0F0H				; IS IT 'NONSENSE IN BASIC'?
	JR	Z,ERR_SA

	CP	0F3H				; IS IT 'INVALID FILE NAME'
	JR	Z,ERR_SA			; ALSO RECONSIDER THE STATEMENT AGAIN


	CP	0FCH				; IS IT 'INVALID STREAM'
	JP	NZ,ROMERR			; ALL OTHER ERRORS 'FALL THROUGH'


ERR_SA	LD	HL,(CH_ADD)			; SAVE THE CURRENT 'ERROR POINTER'
	LD	(DR+CHADD_),HL

	POP	AF				; DISCARD ORIGINAL AF
;
	BIT	5,(IY+FLAGX-Y)			; ARE WE IN INPUT
	JP	NZ,ROMERR			; YES... DON'T PROCESS FURTHER

	BIT	0,(IY+FLAGS3-Y)			; NOW CHECK THE RECURSION FLAG
	JP	NZ,ROMERR			; IF FLAG SET JUST GIVE ERROR

	SET	0,(IY+FLAGS3-Y)			; SET THE RECURSION FLAG FOR EACH NEW STATEMENT

	RST	SYNT
	JR	NZ,ERR_ST
	LD	(IY+PPC+1-Y),0FFH		; IN SYNTAX TIME FORCE THE EDIT LINE NUMBER

ERR_ST	LD	B,(IY+SUBPPC-Y)			; FETCH STATEMENT NUMBER
	LD	C,0				; AND FIND THE START OF THE STATEMENT
	BIT	7,(IY+PPC+1-Y)			; EDIT V. LINE
	JR	Z,LSPR				; JUMP FOR A PROGRAM LINE
	PUSH	BC				; SAVE STATEMENT NUMBER
	RST	CALBAS
	DEFW	19FBH				; JUMP PAST A LINE NUMBER
	POP	BC				; RESTORE STATEMENT NUMBER
	RST	CALBAS
	DEFW	0018H				; FETCH THE CODE
	JR	LSC8				; JUMP FORWARD TO FIND THE REQUIRED STATEMENT
LSPR	LD	HL,(PROG)
LSC1	LD	A,(PPC+1)
	CP	(HL)
	JR	NC,LSC1A
L_ERR	RST	SH_ERR
	DEFB	0				; 'NONSENSE IN BASIC'
LSC1A	INC	HL
	JR	NZ,LSC2
	LD	A,(PPC)				; LOW LINE NUMBER BYTE
	CP	(HL)
	JR	C,L_ERR

LSC2	INC	HL
	LD	E,(HL)  
	INC	HL
	LD	D,(HL)
	INC	HL
	JR	Z,LSC8				; FOUND THE LINE
	ADD	HL,DE
	JR	LSC1

LSC3	LD	DE,6
	ADD	HL,DE
LSC4	LD	A,(HL)
	CP	0EH				; NUMBER MARKER
	JR	Z,LSC3
	INC	HL
	CP	22H
	JR	NZ,LSC5				; NOT QUOTES
	DEC	C				; SET QUOTES FLAG
LSC5	CP	3AH				; COLON?
	JR	Z,LSC6
	CP	0CBH				; 'THEN'
	JR	NZ,LSC7
LSC6	BIT	0,C
	JR	Z,LSC8
LSC7	CP	0DH				; CARRIAGE RETURN
	JR	NZ,LSC4
	JR	L_ERR

LSC8	DJNZ	LSC4

	DEC	HL
	LD	(CH_ADD),HL

	RST	SYNT				; IN SYNTAX-TIME REMOVE ANY FP FORMS FROM LINE
	JR	NZ,ERR_3
	BIT	7,(IY+PPC+1-Y)
	JP	Z,ERR_6				; CONFIRM DEALING WITH THE EDIT LINE
	DEC	HL				; STEP BACK ONE
	LD 	C,00H				; CLEAR FLAG
FP1	INC	HL
	LD	A,(HL)
	CP	0EH
	JR	NZ,FP2
	PUSH	BC
	LD	BC,0006H
	RST	CALBAS
	DEFW	19E8H
	PUSH	HL
	LD	DE,(DR+CHADD_)			; FETCH ERROR POINTER
	AND	A
	SBC	HL,DE
	JR	NC,FP2A				; JUMP IF PAST CHADD_
	EX	DE,HL
	LD	BC,0006H
	AND	A
	SBC	HL,BC				; ELSE REDUCE CHADD_ BY SIX LOCATIONS ALSO
	LD	(DR+CHADD_),HL
FP2A	POP	HL
	POP	BC
FP2	LD	A,(HL)
	CP	0DH
	JR	NZ,FP1

ERR_3	RST	CALBAS				; CLEAR THE WORK SPACE & CALCULATOR STACK
        DEFW	16BFH
	CALL	SV_CL				; INITIALIZE THE NECESSARY SHADOW SYS. VARS.

	RST	CALBAS
	DEFW	0020H
	SUB	0CEH				; COMMANDS WILL BE ACCEPTED ONLY
	CP	01H
	JP	Z,S_CAT				; JUMP FORWARD TO SCAN A 'CAT' STATEMENT
	CP	02H
	JP	Z,S_FORM			; JUMP FORWARD TO SCAN A 'FORMAT' STATEMENT
	CP	03H
	JP	Z,S_MOVE			; JUMP FORWARD TO SCAN A 'MOVE' STATEMENT
	CP	04H
	JP	Z,S_ERAS			; JUMP FORWARD TO SCAN AN 'ERASE' STATEMENT
	CP	05H
	JP	Z,S_OPEN			; JUMP FORWARD TO SCAN AN 'OPEN #' STATEMENT
	CP	2AH
	JP	Z,S_SAVE			; JUMP FORWARD TO SCAN A 'SAVE' STATEMENT
	CP	21H
	JP	Z,S_LOAD			; JUMP FORWARD TO SCAN A 'LOAD' STATEMENT
	CP	08H
	JP	Z,S_VERI			; JUMP FORWARD TO SCAN A 'VERIFY' STATEMENT
	CP	07H
	JP	Z, S_MERG			; JUMP FORWARD TO SCAN A 'MERGE' STATEMENT

		; ADDED COMMANDS COME HERE -E.G. CLS

	CP	2DH
	JP	Z,S_CLS				; JUMP FORWARD TO SCAN A 'CLS' STATEMENT
	CP	2FH
	JP	Z,S_CLR				; JUMP FORWARD TO SCAN A 'CLEAR' STATEMENT



ERR_V	LD	HL,(DR+VECTOR)			; FETCH THE VECTORED ADDRESS
	JP	(HL)				; THIS IS 'ERR_6' UNLESS ALTERED


ERR_6	LD	HL,(DR+CHADD_)
	LD	(CH_ADD),HL
	RST	ROMERR				; ALLOW EXISTING ERROR THROUGH


;______________________________________________________________



		; THE INSERTION ROUTINE - INTIALISES THE SHADOW ROM

INSER1	LD	HL,(CHANS_)
	LD	DE,.NOT.DR
	ADD	HL,DE				; ARE CHANS_ & DR EQUAL?
	JR	C,INS_2				; RETURN IF THEY ARE NOT
	LD	HL,INS_1
	PUSH	HL				; STACK A RETURN ADDRESS
	LD	HL,(STKBOT)
	LD	(STKEND),HL			; RESTORE CALC. SP. AFTER TEMP USE
	LD	HL,5C92H
	LD	(MEM),HL
	LD	HL,DR-1				; INSERT AT DR
	LD	BC,DR_LEN			; THIS MANY
	LD	DE,0				; DISCRIMINATOR IS ZERO
	PUSH	DE
	LD	E,8
	PUSH	DE
	LD	DE,1655H			; INSERT IN BASE ROM
	PUSH	DE
	JP	RETBAS

INS_1	LD	HL,SH_VARS			; BASE ADDRESS
	LD	BC,VA_LEN			; NUMBER OF LOCATIONS IN TABLE
	LD	DE,DR
	LDIR
	LD	A,1
	LD	(DR+COPIES),A			; ONLY WANT ONE COPY NORMALLY
	RET
INS_2
	RES	1,(IY+FLAGS3-Y)			; RESET THE AUTO-RUN FLAGS ON SECOND PASS
	RET

SH_VARS	DEFB	02H				; DEFAULT FOR FLAGS3 (AUTO-RUN ONLY SET)
	DEFW	ERR_6				; VECTOR ADDRESS
	DEFB	21H				; CALBAS SUBROUTINE
	DEFW	0H				; LD HL,----
	DEFB	0CDH
	DEFW	0H				; CALL ----
	DEFB	22H
	DEFW	DR+H_L				; LD(H_L),HL
	DEFB	0C9H				; RET
	DEFW	0CH				; DEFAULT FOR BAUD
	DEFB	01H				; DEFAULT FOR NTSTAT  - OWN STATION '1'
	DEFB	00H				; DEFAULT FOR IOBORD  - I/O COLOUR
	DEFW	0000H				; INITIALIZE SER_FL

VA_LEN	EQU	$-SH_VARS


;__________________________________________________________________

	; SHADOW SYS. VAR. HANDLING ROUTINES

SV_CL	LD	HL,DR+NTRESP			; PREPARE TO INITIALIZE THE SYS. VARS.
	LD	B,HD_12-NTRESP+1		; INITIALIZE ALL THESE SYS. VARS.
SV_CL1	LD	(HL),0FFH
	INC	HL
	DJNZ	SV_CL1
	RET


;______________________________________________________________
